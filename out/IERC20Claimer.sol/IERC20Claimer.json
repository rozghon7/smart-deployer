{"abi":[{"type":"function","name":"airdropChecker","inputs":[{"name":"_amount","type":"uint256","internalType":"uint256"},{"name":"proof","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"claim","inputs":[{"name":"_amount","type":"uint256","internalType":"uint256"},{"name":"proof","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deposit","inputs":[{"name":"_amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getInitData","inputs":[{"name":"_deployManager","type":"address","internalType":"address"},{"name":"_tokenAddress","type":"address","internalType":"address"},{"name":"_merkleRoot","type":"bytes32","internalType":"bytes32"},{"name":"_timeForClaim","type":"uint256","internalType":"uint256"},{"name":"_owner","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"recoverUnclaimed","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"DepositMade","inputs":[{"name":"sender","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"tokenAddress","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"TokensClaimed","inputs":[{"name":"claimer","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"timestamp","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"error","name":"AlreadyClaimed","inputs":[]},{"type":"error","name":"AmountMustBeGreaterThanZero","inputs":[]},{"type":"error","name":"ClaimTimeDoesNotExpired","inputs":[]},{"type":"error","name":"DepositFailed","inputs":[]},{"type":"error","name":"NotEnoughFundsInContract","inputs":[]},{"type":"error","name":"NothingToClaim","inputs":[]},{"type":"error","name":"NothingToWithdraw","inputs":[]},{"type":"error","name":"TooLateForClaim","inputs":[]},{"type":"error","name":"TransactionFailed","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"airdropChecker(uint256,bytes32[])":"758e2f9b","claim(uint256,bytes32[])":"2f52ebb7","deposit(uint256)":"b6b55f25","getInitData(address,address,bytes32,uint256,address)":"35fb0ebd","recoverUnclaimed()":"64cc7402"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AlreadyClaimed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AmountMustBeGreaterThanZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ClaimTimeDoesNotExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DepositFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEnoughFundsInContract\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NothingToClaim\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NothingToWithdraw\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TooLateForClaim\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransactionFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"DepositMade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"airdropChecker\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_deployManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_timeForClaim\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getInitData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recoverUnclaimed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"rozghon7.\",\"kind\":\"dev\",\"methods\":{\"airdropChecker(uint256,bytes32[])\":{\"params\":{\"_amount\":\"The amount of tokens to check.\",\"proof\":\"The Merkle proof to verify the claim.\"},\"returns\":{\"_0\":\"True if the user is eligible to claim, false otherwise.\"}},\"claim(uint256,bytes32[])\":{\"params\":{\"_amount\":\"The amount of tokens to claim.\",\"proof\":\"The Merkle proof to verify the claim.\"}},\"getInitData(address,address,bytes32,uint256,address)\":{\"params\":{\"_deployManager\":\"Address of the deploy manager.\",\"_merkleRoot\":\"The Merkle root of the airdrop.\",\"_owner\":\"Address of the contract owner.\",\"_timeForClaim\":\"The time until which claims are allowed.\",\"_tokenAddress\":\"Address of the ERC20 token.\"},\"returns\":{\"_0\":\"ABI-encoded initialization data.\"}}},\"title\":\"IERC20Claimer - Interface for ERC20 token claiming functionality.\",\"version\":1},\"userdoc\":{\"errors\":{\"AlreadyClaimed()\":[{\"notice\":\"Reverts if the user tries to claim tokens that have already been claimed.\"}],\"AmountMustBeGreaterThanZero()\":[{\"notice\":\"Reverts if the amount to claim is zero.\"}],\"ClaimTimeDoesNotExpired()\":[{\"notice\":\"Reverts if the claim time does not expire and the owner tries to recover unclaimed tokens.\"}],\"DepositFailed()\":[{\"notice\":\"Reverts if deposit transfer fails.\"}],\"NotEnoughFundsInContract()\":[{\"notice\":\"Reverts if there are not enough funds in the contract to fulfill the claim.\"}],\"NothingToClaim()\":[{\"notice\":\"Reverts if there are no tokens to claim for the user.\"}],\"NothingToWithdraw()\":[{\"notice\":\"Reverts if contracn have nothing to withdraw.\"}],\"TooLateForClaim()\":[{\"notice\":\"Reverts if the claim time has passed.\"}],\"TransactionFailed()\":[{\"notice\":\"Reverts if the transaction fails.\"}]},\"events\":{\"DepositMade(address,uint256,address)\":{\"notice\":\"Emited when tokens are deposited into the contract.\"},\"TokensClaimed(address,uint256,uint256)\":{\"notice\":\"Emited when tokens are claimed by a user.\"}},\"kind\":\"user\",\"methods\":{\"airdropChecker(uint256,bytes32[])\":{\"notice\":\"Checks if the user is eligible to claim tokens based on a Merkle proof.\"},\"claim(uint256,bytes32[])\":{\"notice\":\"Allows a user to claim tokens based on a Merkle proof.\"},\"deposit(uint256)\":{\"notice\":\"Allows the owner to deposit tokens into the contract.\"},\"getInitData(address,address,bytes32,uint256,address)\":{\"notice\":\"Returns the ABI-encoded initialization data for the contract.\"},\"recoverUnclaimed()\":{\"notice\":\"Allows the owner to recover unclaimed tokens after the claim period has expired.\"}},\"notice\":\"This interface defines the structure and functions for claiming ERC20 tokens.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ERC20Claimer/IERC20Claimer.sol\":\"IERC20Claimer\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"src/ERC20Claimer/IERC20Claimer.sol\":{\"keccak256\":\"0x8e5a231e918fab08f4f959e003f8bddc2ffbae132266e27d071ff393af280962\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bdba53facf4a90bc01345f353db239736a2443ba8a4adb2ecbf58d3a23172a9\",\"dweb:/ipfs/QmaLXKUUXheg4fzVsCkkQ1L4RFN5DnzLrjasp6mejU5KCQ\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.30+commit.73712a01"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"AlreadyClaimed"},{"inputs":[],"type":"error","name":"AmountMustBeGreaterThanZero"},{"inputs":[],"type":"error","name":"ClaimTimeDoesNotExpired"},{"inputs":[],"type":"error","name":"DepositFailed"},{"inputs":[],"type":"error","name":"NotEnoughFundsInContract"},{"inputs":[],"type":"error","name":"NothingToClaim"},{"inputs":[],"type":"error","name":"NothingToWithdraw"},{"inputs":[],"type":"error","name":"TooLateForClaim"},{"inputs":[],"type":"error","name":"TransactionFailed"},{"inputs":[{"internalType":"address","name":"sender","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false},{"internalType":"address","name":"tokenAddress","type":"address","indexed":true}],"type":"event","name":"DepositMade","anonymous":false},{"inputs":[{"internalType":"address","name":"claimer","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":true},{"internalType":"uint256","name":"timestamp","type":"uint256","indexed":false}],"type":"event","name":"TokensClaimed","anonymous":false},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"}],"stateMutability":"view","type":"function","name":"airdropChecker","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"claim"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deposit"},{"inputs":[{"internalType":"address","name":"_deployManager","type":"address"},{"internalType":"address","name":"_tokenAddress","type":"address"},{"internalType":"bytes32","name":"_merkleRoot","type":"bytes32"},{"internalType":"uint256","name":"_timeForClaim","type":"uint256"},{"internalType":"address","name":"_owner","type":"address"}],"stateMutability":"pure","type":"function","name":"getInitData","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"recoverUnclaimed"}],"devdoc":{"kind":"dev","methods":{"airdropChecker(uint256,bytes32[])":{"params":{"_amount":"The amount of tokens to check.","proof":"The Merkle proof to verify the claim."},"returns":{"_0":"True if the user is eligible to claim, false otherwise."}},"claim(uint256,bytes32[])":{"params":{"_amount":"The amount of tokens to claim.","proof":"The Merkle proof to verify the claim."}},"getInitData(address,address,bytes32,uint256,address)":{"params":{"_deployManager":"Address of the deploy manager.","_merkleRoot":"The Merkle root of the airdrop.","_owner":"Address of the contract owner.","_timeForClaim":"The time until which claims are allowed.","_tokenAddress":"Address of the ERC20 token."},"returns":{"_0":"ABI-encoded initialization data."}}},"version":1},"userdoc":{"kind":"user","methods":{"airdropChecker(uint256,bytes32[])":{"notice":"Checks if the user is eligible to claim tokens based on a Merkle proof."},"claim(uint256,bytes32[])":{"notice":"Allows a user to claim tokens based on a Merkle proof."},"deposit(uint256)":{"notice":"Allows the owner to deposit tokens into the contract."},"getInitData(address,address,bytes32,uint256,address)":{"notice":"Returns the ABI-encoded initialization data for the contract."},"recoverUnclaimed()":{"notice":"Allows the owner to recover unclaimed tokens after the claim period has expired."}},"version":1}},"settings":{"remappings":["@openzeppelin/=node_modules/@openzeppelin/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":10},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/ERC20Claimer/IERC20Claimer.sol":"IERC20Claimer"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"src/ERC20Claimer/IERC20Claimer.sol":{"keccak256":"0x8e5a231e918fab08f4f959e003f8bddc2ffbae132266e27d071ff393af280962","urls":["bzz-raw://8bdba53facf4a90bc01345f353db239736a2443ba8a4adb2ecbf58d3a23172a9","dweb:/ipfs/QmaLXKUUXheg4fzVsCkkQ1L4RFN5DnzLrjasp6mejU5KCQ"],"license":"MIT"}},"version":1},"id":56}